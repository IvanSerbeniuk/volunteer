version: '3.8'

services:
  nginx: 
    restart: unless-stopped
    container_name: nginx
    build:
      context: .
      dockerfile: ./docker/nginx/development/Dockerfile
    ports:
      - 80:80
    volumes:
      - static_volume:/app/static
      - media_volume:/app/media
      - ./docker/nginx/development:/etc/nginx/conf.d
    depends_on: 
      - volunteer
  volunteer:
    build: .
    container_name: volunteer
    restart: unless-stopped
    env_file: .env
    environment:
      - REDIS_HOST=redis
    ports:
      - "8000:8000"
    depends_on:
      - postgres
      - redis  

  redis:
    # image: redis:7.2.0-alpine3.18
    container_name: redis
    build: ./redis
    ports:
      - '6379:6379'
    command: sh -c "./init.sh"
    privileged: true
    # command: ["redis-server", "--appendonly", "no", "--maxmemory", "500mb", "--maxmemory-policy", "allkeys-lru", "--daemonize", "yes"]
    hostname: redis    
    volumes:
      - redisdata:/data
      - /proc/sys:/host_proc/sys:ro
    cap_add:
      - SYS_ADMIN

  postgres:
    image: postgres:14
    container_name: postgres
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - '5432:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data/

volumes:
  postgres_data:
  redisdata:
  static_volume:
  media_volume: