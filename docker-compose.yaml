version: '3.8'

services:
  nginx: 
    restart: unless-stopped
    container_name: nginx
    build:
      context: .
      dockerfile: ./docker/nginx/production/Dockerfile
    ports:
      - 80:80
      - 443:443
    volumes:
      - static_volume:/app/static
      - media_volume:/app/media
      - ./docker/nginx/production:/etc/nginx/conf.d
      - ./docker/nginx/certbot/conf:/etc/letsencrypt
      - ./docker/nginx/certbot/www:/var/www/certbot
    depends_on: 
      - volunteer
  certbot:
    image: certbot/certbot
    restart: unless-stopped
    volumes:
      - ./docker/nginx/certbot/conf:/etc/letsencrypt
      - ./docker/nginx/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"    
  volunteer:

    image: serbenyuk/volunteer:v0.5.0
    container_name: volunteer
    restart: unless-stopped
    env_file: .env
    environment:
      - REDIS_HOST=redis
    ports:
      - "8000:8000"
    depends_on:
      - postgres
      - redis  

  redis:
    image: redis:7.2.0-alpine3.18
    container_name: redis
    ports:
      - '6379:6379'
    command: redis-server --save 20 1 --loglevel warning  
    hostname: redis    
    volumes:
      - redisdata:/data

  postgres:
    image: postgres:14
    container_name: postgres
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - '5432:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data/

volumes:
  postgres_data:
  redisdata:
  static_volume:
  media_volume: